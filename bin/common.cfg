# common.cfg
# ==========
#
# Common variable defaults and functions
# are available from this bash script.
# To include in other scripts do:
#
#   source ./common.cfg
#

# If $0 refers this script, then it is being executed instead of sourced.
# The grep will find the line with the grep itself, so the token can be anything at all 
# that we can be confident will not not appear in the calling script.

if [ $0 != bash ] && [ $0 != -bash ] && grep -q adgslkjtklsetjkalwetiou -- $0 > /dev/null 2>&1
then
  sourced=0
else
  sourced=1
fi

if [ $sourced -ne 1 ]; then
    echo "[ERROR] Script only works if 'sourced'."
    echo "Usage:  source $0 <env_name>"
    exit
fi

export BASEDIR=$(dirname ${BASH_SOURCE[0]})/..

# Set DEFAULT values where non-existent
if [ ! $JASPY_BASE_DIR ]; then
    export JASPY_BASE_DIR=/apps/jasmin
    echo "Setting default base directory: JASPY_BASE_DIR=$JASPY_BASE_DIR"
fi

if [ ! -d $JASPY_BASE_DIR ]; then
    mkdir -p $JASPY_BASE_DIR
    echo "Created base directory: $JASPY_BASE_DIR"
fi

if [ ! $JASPY_CHANNEL_URL ]; then
    export JASPY_CHANNEL_URL=https://dist.ceda.ac.uk/jaspy
    echo "Setting default for JASPY channel: JASPY_CHANNEL_URL=$JASPY_CHANNEL_URL"
fi

if [ ! $JASPY_MODULEFILE_BASE_DIR ]; then
    export JASPY_MODULEFILE_BASE_DIR=/apps/modulefiles
    echo "Setting default for JASPY MODULEFILE dir: JASPY_MODULEFILE_BASE_DIR=$JASPY_MODULEFILE_BASE_DIR"
fi

# Common FUNCTIONS
function get_env_path {
    env_name=$1

    if [ ! $env_name ]; then
        echo "Must provide environment name when calling: common.cfg::get_env_path"
        exit
    fi

    resp=$(find ${BASEDIR}/environments* -follow -name $env_name)
    echo $resp
}


